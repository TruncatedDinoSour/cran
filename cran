#!/usr/bin/env bash

HOME="${HOME:-$(eval echo '~')}"

repos="https://cran.r-project.org/"
root_required=true
r_interpreter=/usr/bin/R
r_flags=(-q --vanilla -e)

new_config() {
    mkdir -p "$HOME"/.config

    {
        echo '#!/usr/bin/env bash'
        echo 'export repos="https://cran.r-project.org/"'
        echo "export root_required=$root_required"
        echo "export r_interpreter=$r_interpreter"
        echo "export r_flags=(${r_flags[*]})"
    } >"$HOME/.config/cran.conf"

    echo 'Reset config, relaunch cran'
    exit
}

source "$HOME/.config/cran.conf" &>/dev/null || (echo "$HOME/.config/cran.conf not found, creating it" && new_config)

unlist() {
    local str
    str="$(echo -n "$@" | grep -io '\s.*$' | sed 's/^.//')"
    echo -n "unlist(strsplit(\"$str\", \" \"), use.names=FALSE)"
}

repos="$(unlist ". ${repos//\"/\\\"}")"
__VERSION__='1.0'

print_help() {
    echo "$(basename "$0") commands:"
    echo -e "\tversion"
    echo -e "\tinstall <package(s)>"
    echo -e "\tdownload <package(s)>"
    echo -e "\tremove <package(s)>"
    echo -e "\tlist"
    echo -e "\thelp"
    echo -e "\tupdate"
    echo -e "\tupdates"
    echo -e "\tdepends"

    if [[ "$1" ]]; then exit "$1"; fi
}

read_file() {
    echo -n "$(unlist ". $(xargs echo -n <"$1")")"
}

install_packages() {
    if [[ "$2" ]]; then
        $r_interpreter ${r_flags[*]} "install.packages($(unlist "$@"), ask=FALSE, repos=$repos)"
    else
        if [[ -f "./cranfile" ]]; then
            $r_interpreter ${r_flags[*]} "install.packages($(read_file ./cranfile), ask=FALSE, repos=$repos)"
        else
            print_help 3
        fi
    fi
}

remove_packages() {
    if [[ "$2" ]]; then
        $r_interpreter ${r_flags[*]} "remove.packages($(unlist "$@"))"
    else
        if [[ -f "cranfile" ]]; then
            $r_interpreter ${r_flags[*]} "remove.packages($(read_file ./cranfile))"
        else
            print_help 3
        fi
    fi
}

download_packages() {
    if [[ "$2" ]]; then
        $r_interpreter ${r_flags[*]} "download.packages($(unlist "$@"), ask=FALSE, repos=$repos, destdir=\".\")"
        chmod u+rw ./*.tar.*
    else
        print_help 3
    fi
}

main() {
    if [[ $UID != '0' ]] && $root_required; then
        echo 'run me as root!'
        exit 1
    fi

    [[ ! $1 ]] && print_help 2

    case "$1" in
    version | v | -v | ver) echo "cran version $__VERSION__" ;;
    install | i | -i | ins) install_packages "$@" ;;
    download | d | -d | dow) download_packages "$@" ;;
    remove | r | -r | rm) remove_packages "$@" ;;
    list | l | -l | ls) $r_interpreter ${r_flags[*]} 'installed.packages()' | sed '/^>.*$/ d' ;;
    help | h | -h | hlp) print_help ;;
    update | u | -u | upt) $r_interpreter ${r_flags[*]} "update.packages(ask=FALSE, repos=$repos)" ;;
    updates | U | -U | upd) $r_interpreter ${r_flags[*]} "old.packages(repos=$repos)" | sed '/^>.*$/ d; s/^NULL$/Everything is up-to-date./; /Repository.*/ d; /https\:\/\/.*/ d' ;;
    depends | D | -D | dep) [[ -f "./cranfile" ]] && xargs echo <./cranfile || exit 4 ;;
    *) print_help 2 ;;
    esac
}

main "$@"
